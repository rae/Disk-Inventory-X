//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

//#import "NSObject.h"
//
//

@class NSDictionary, NSRecursiveLock, NSString, NSURL, NTDate, NTFSRefObject, NTFileTypeIdentifier, NTIcon, NTVolume, NTVolumeMgrState;

@interface NTFileDesc : NSObject <NSCoding>
{
    NSRecursiveLock *_lock;
    NTFileDesc *_resolvedDesc;
    NTFileDesc *_aliasDesc;
    NTFileDesc *_parentDesc;
    NTVolumeMgrState *_volumeMgrState;
    NTDate *_modificationDate;
    NTDate *_attributeModificationDate;
    NTDate *_accessDate;
    NTDate *_creationDate;
    NSString *_name;
    NSString *_displayName;
    NSString *_extension;
    NSString *_kindString;
    NSString *_versionString;
    NSString *_infoString;
    NSString *_application;
    NSString *_comments;
    NTFileTypeIdentifier *_typeIdentifier;
    NSString *_permissionString;
    NSString *_ownerName;
    NSString *_groupName;
    NTIcon *_icon;
    NSDictionary *_fileAttributes;
    NTFSRefObject *_fsRefObject;
    NSURL *_URL;
    NTVolume *_mountedVolumeInfo;
    unsigned long _posixPermissions;
    unsigned long _posixFileMode;
    short _vRefNum;
    unsigned long long _totalValence;
    unsigned int _valence;
    unsigned long long _folderSize;
    unsigned long long _physicalFolderSize;
    unsigned long long _sizeOfAllForks;
    unsigned long long _physicalSizeOfAllForks;
    unsigned long long _volumeTotalBytes;
    unsigned long long _volumeFreeBytes;
    struct __bools {
        unsigned int isFile:1;
        unsigned int isFile_initialized:1;
        unsigned int isInvisible:1;
        unsigned int isInvisible_initialized:1;
        unsigned int isLocked:1;
        unsigned int isLocked_initialized:1;
        unsigned int hasCustomIcon:1;
        unsigned int hasCustomIcon_initialized:1;
        unsigned int isStationery:1;
        unsigned int isStationery_initialized:1;
        unsigned int isBundleBitSet:1;
        unsigned int isBundleBitSet_initialized:1;
        unsigned int isAliasBitSet:1;
        unsigned int isAliasBitSet_initialized:1;
        unsigned int isReadable:1;
        unsigned int isReadable_initialized:1;
        unsigned int isWritable:1;
        unsigned int isWritable_initialized:1;
        unsigned int isDeletable:1;
        unsigned int isDeletable_initialized:1;
        unsigned int isRenamable:1;
        unsigned int isRenamable_initialized:1;
        unsigned int isMovable:1;
        unsigned int isMovable_initialized:1;
        unsigned int isCarbonAlias:1;
        unsigned int isCarbonAlias_initialized:1;
        unsigned int isPathFinderAlias:1;
        unsigned int isPathFinderAlias_initialized:1;
        unsigned int isSymbolicLink:1;
        unsigned int isSymbolicLink_initialized:1;
        unsigned int isStickyBitSet:1;
        unsigned int isStickyBitSet_initialized:1;
        unsigned int isVolume:1;
        unsigned int isVolume_initialized:1;
        unsigned int hasFilesInDirectory:1;
        unsigned int hasVisibleFilesInDirectory:1;
        unsigned int hasFilesInDirectory_initialized:1;
        unsigned int vRefNum_initialized:1;
        unsigned int name_initialized:1;
        unsigned int displayName_initialized:1;
        unsigned int icon_initialized:1;
        unsigned int kindString_initialized:1;
        unsigned int valid:1;
        unsigned int isComputer:1;
        unsigned int hasBeenModified:1;
        unsigned int isServerAlias:1;
        unsigned int isBrokenAlias:1;
        unsigned int folderSizeIsCalculated:1;
        unsigned int folderValenceIsCalculated:1;
        unsigned int folderTotalValenceIsCalculated:1;
        unsigned int volumeParams_initialized:1;
        unsigned int isEjectable:1;
        unsigned int volumeSupportsSubtreeIterators:1;
        unsigned int volumeSupportsNamedForks:1;
        unsigned int volumeSupportsCatalogSearch:1;
        unsigned int volumeSupportsSymbolicLinks:1;
        unsigned int volumeSupportsHFSPlusAPIs:1;
        unsigned int volumeDoNotDisplay:1;
        unsigned int isNetwork:1;
        unsigned int volumeSupportsSearchFS_initialized:1;
        unsigned int volumeSupportsSearchFS:1;
        unsigned int itemInfo_initialized:1;
        unsigned int isPackage:1;
        unsigned int isApplication:1;
        unsigned int isExtensionHidden:1;
        unsigned int volumeInfo_initialized:1;
        unsigned int isVolumeLocked:1;
    } _bools;
}

+ (id)descPref:(id)arg1;
+ (id)descResolve:(id)arg1;
+ (id)descNoResolve:(id)arg1;
+ (id)descResolveServerAlias:(id)arg1;
+ (id)descFSRef:(const struct FSRef *)arg1;
+ (id)descFSRef:(const struct FSRef *)arg1 updatedFor:(unsigned long)arg2;
+ (id)descFSRef:(const struct FSRef *)arg1 name:(id)arg2 parFSRef:(const struct FSRef *)arg3 updatedFor:(unsigned long)arg4;
+ (id)descFSRefObject:(id)arg1;
+ (id)descVolumeRefNum:(short)arg1;
+ (id)inValid;
+ (unsigned long long)volumeFreeBytes:(NTFileDesc *)fileDesc;
+ (unsigned long long)volumeTotalBytes:(NTFileDesc *)fileDesc;

- (void)commonInit:(id)arg1;
- (id)initWithFSRefObject:(id)arg1;
- (id)initWithPath:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)descResolveIfAlias;
- (id)descResolveIfAlias:(BOOL)arg1;
- (id)aliasDesc;
- (id)descPref;
- (id)newDesc;
- (int)compareByDisplayName:(id)arg1;
- (int)compareByName:(id)arg1;
- (int)compareByPath:(id)arg1;
- (int)compareByVolumeType:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToDesc:(id)arg1;
- (BOOL)isEqualTo:(id)arg1;
- (id)longDescription;
- (id)description;
- (BOOL)isComputer;
- (BOOL)isValid;
- (BOOL)exists;
- (unsigned int)nodeID;
- (id)name;
- (id)displayName;
- (id)FSRefPath;
- (BOOL)isParentOfFSRef:(const struct FSRef *)arg1;
- (id)parentDesc;
- (unsigned int)parentDirID;
- (BOOL)parentIsVolume;
- (id)parentPath:(BOOL)arg1;
- (id)application;
- (BOOL)applicationCanOpenFile:(id)arg1;
- (id)ntPath;
- (id)path;
- (id)typeIdentifier;
- (id)extension;
- (id)kindString;
- (BOOL)isFile;
- (BOOL)isDirectory;
- (BOOL)isInvisible;
- (BOOL)isNameLocked;
- (BOOL)isLocked;
- (BOOL)isVolumeLocked;
- (BOOL)hasCustomIcon;
- (BOOL)isStationery;
- (BOOL)isBundleBitSet;
- (BOOL)isAliasBitSet;
- (BOOL)isPackage;
- (BOOL)isApplication;
- (BOOL)isExtensionHidden;
- (id)executablePath;
- (BOOL)isReadable;
- (BOOL)isWritable;
- (BOOL)isDeletable;
- (BOOL)isMovable;
- (BOOL)isRenamable;
- (BOOL)isAlias;
- (BOOL)isCarbonAlias;
- (BOOL)isPathFinderAlias;
- (BOOL)isSymbolicLink;
- (BOOL)isStickyBitSet;
- (BOOL)isNetworkAutomountingSymbolicLink;
- (BOOL)isVolume;
- (BOOL)isEjectable;
- (int)label;
- (int)type;
- (int)creator;
- (unsigned long long)sizeOfRsrcFork;
- (unsigned long long)size;
- (unsigned long long)physicalSize;
- (unsigned long long)sizeOfDataFork;
- (void)setFolderSize:(unsigned long long)arg1;
- (void)setTotalValence:(unsigned long long)arg1;
- (BOOL)folderSizeIsCalculated;
- (BOOL)folderTotalValenceIsCalculated;
- (unsigned long long)totalValence;
- (unsigned long)valence;
- (unsigned long)posixPermissions;
- (unsigned long)posixFileMode;
- (BOOL)isExecutableBitSet;
- (id)permissionString;
- (unsigned long)ownerID;
- (id)ownerName;
- (unsigned long)groupID;
- (id)groupName;
- (id)modificationDate;
- (id)creationDate;
- (id)attributeModificationDate;
- (id)accessDate;
- (BOOL)hasBeenModified;
- (const struct FileInfo *)fileInfo;
- (id)URL;
- (id)volumeURL;
- (BOOL)isUFS;
- (BOOL)isMSDOS;
- (BOOL)isAudioCD;
- (BOOL)isCDROM;
- (BOOL)isDVDROM;
- (BOOL)isFirewire;
- (BOOL)isWebDAV;
- (BOOL)isSAMBA;
- (BOOL)isCIFS;
- (BOOL)isHFS;
- (BOOL)isAFP;
- (BOOL)isNFS;
- (BOOL)isNetwork;
- (id)mountPoint;
- (id)mountDevice;
- (id)volumeName;
- (id)volumeFormat;
- (BOOL)isBootVolume;
- (id)directoryContents:(BOOL)arg1 resolveIfAlias:(BOOL)arg2;
- (BOOL)hasDirectoryContents:(BOOL)arg1;
- (id)comments;
- (struct _NSPoint)finderPosition;
- (id)versionString;
- (id)infoString;
- (const char *)UTF8Path;
- (const char *)fileSystemPath;
- (struct FSRef *)FSRefPtr;
- (BOOL)FSSpec:(struct FSSpec *)arg1;
- (id)fileAttributes;
- (BOOL)isBrokenAlias;
- (BOOL)isServerAlias;
- (short)volumeRefNum;
- (BOOL)isNetworkFolder;
- (id)icon;
- (id)resourceForkPath;
- (BOOL)volumeSupportsSubtreeIterators;
- (BOOL)volumeSupportsNamedForks;
- (BOOL)volumeSupportsCatalogSearch;
- (BOOL)volumeSupportsSymbolicLinks;
- (BOOL)volumeSupportsHFSPlusAPIs;
- (BOOL)volumeDoNotDisplay;
- (BOOL)volumeSupportsSearchFS;
- (id)pathComponents:(BOOL)arg1;
- (BOOL)catalogInfo:(struct FSCatalogInfo *)arg1 bitmap:(unsigned long)arg2;
- (unsigned long long)totalBytes;
- (unsigned long long)freeBytes;

@end

